mappings:
  # This mapping refers to the "raw" relation and reads in data from the source in S3
  measurements_raw:
    kind: relation
    relation: measurements_raw
    partitions:
      year: $year

  # Extract multiple columns from the raw measurements data using SQL SUBSTR functions
  measurements_extracted:
    kind: select
    input: measurements_raw
    columns:
      usaf: "SUBSTR(raw_data,5,6)"
      wban: "SUBSTR(raw_data,11,5)"
      date: "TO_DATE(SUBSTR(raw_data,16,8), 'yyyyMMdd')"
      time: "SUBSTR(raw_data,24,4)"
      report_type: "SUBSTR(raw_data,42,5)"
      wind_direction: "CAST(SUBSTR(raw_data,61,3) AS INT)"
      wind_direction_qual: "SUBSTR(raw_data,64,1)"
      wind_observation: "SUBSTR(raw_data,65,1)"
      wind_speed: "CAST(CAST(SUBSTR(raw_data,66,4) AS FLOAT)/10 AS FLOAT)"
      wind_speed_qual: "SUBSTR(raw_data,70,1)"
      air_temperature: "CAST(CAST(SUBSTR(raw_data,88,5) AS FLOAT)/10 AS FLOAT)"
      air_temperature_qual: "SUBSTR(raw_data,93,1)"

  # Assign appropriate data types, which suite better to SQL databases
  measurements_conformed:
    kind: cast
    input: measurements_extracted
    columns:
      usaf: CHAR(6)
      wban: CHAR(5)
      time: CHAR(4)
      report_type: CHAR(5)
      wind_direction_qual: CHAR(1)
      wind_observation: CHAR(1)
      wind_speed_qual: CHAR(1)
      air_temperature_qual: CHAR(1)

  # Since our SQL table will use a primary key, we need to provide a mapping to ensure this constraint
  measurements_deduplicated:
    kind: aggregate
    input: measurements_conformed
    # List the elements of the primary key
    dimensions:
      - usaf
      - wban
      - date
      - time
    # Perform an aggregation, picking one non-NULL entry per item
    aggregations:
      report_type: "FIRST(report_type, True)"
      wind_direction: "FIRST(CASE WHEN wind_direction_qual='1' THEN wind_direction END, True)"
      wind_direction_qual: "FIRST(wind_direction_qual, True)"
      wind_observation: "FIRST(wind_observation, True)"
      wind_speed: "FIRST(CASE WHEN wind_speed_qual='1' THEN wind_speed END, True)"
      wind_speed_qual: "FIRST(wind_speed_qual, True)"
      air_temperature: "FIRST(CASE WHEN air_temperature_qual='1' THEN air_temperature END, True)"
      air_temperature_qual: "FIRST(air_temperature_qual, True)"
